using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.Linq;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Mvc;
using Microsoft.Extensions.Logging;
using writersUnblock.Models;
using PuppeteerSharp.Helpers.Linux;
using System.Text.RegularExpressions;
using System.Numerics;


using Microsoft.AspNetCore.Identity;
using Microsoft.AspNetCore.Http;
//using Microsoft.EntityFrameworkCore;

namespace writersUnblock.Controllers
{
	public class HomeController : Controller
	{
		private readonly ILogger<HomeController> _logger;
		public object SearchViewModel;
		public PuppeteerSharp.LaunchOptions launchOptions;
		public PuppeteerSharp.ViewPortOptions viewPortOptions;

		ArrayList arlist1 = new ArrayList();

		public string[] nouns =
		{
			"people",
			"history",
			"way",
			"art",
			"world",
			"information",
			"map",
			"two",
			"family",
			"government",
			"health",
			"system",
			"computer",
			"meat",
			"year",
			"thanks",
			"music",
			"person",
			"reading",
			"method",
			"data",
			"food",
			"understanding",
			"theory",
			"law",
			"bird",
			"literature",
			"problem",
			"software",
			"control",
			"knowledge",
			"power",
			"ability",
			"economics",
			"love",
			"internet",
			"television",
			"science",
			"library",
			"nature",
			"fact",
			"product",
			"idea",
			"temperature",
			"investment",
			"area",
			"society",
			"activity",
			"story",
			"industry",
			"media",
			"thing",
			"oven",
			"community",
			"definition",
			"safety",
			"quality",
			"development",
			"language",
			"management",
			"player",
			"variety",
			"video",
			"week",
			"security",
			"country",
			"exam",
			"movie",
			"organization",
			"equipment",
			"physics",
			"analysis",
			"policy",
			"series",
			"thought",
			"basis",
			"boyfriend",
			"direction",
			"strategy",
			"technology",
			"army",
			"camera",
			"freedom",
			"paper",
			"environment",
			"child",
			"instance",
			"month",
			"truth",
			"marketing",
			"university",
			"writing",
			"article",
			"department",
			"difference",
			"goal",
			"news",
			"audience",
			"fishing",
			"growth",
			"income",
			"marriage",
			"user",
			"combination",
			"failure",
			"meaning",
			"medicine",
			"philosophy",
			"teacher",
			"communication",
			"night",
			"chemistry",
			"disease",
			"disk",
			"energy",
			"nation",
			"road",
			"role",
			"soup",
			"advertising",
			"location",
			"success",
			"addition",
			"apartment",
			"education",
			"math",
			"moment",
			"painting",
			"politics",
			"attention",
			"decision",
			"event",
			"property",
			"shopping",
			"student",
			"wood",
			"competition",
			"distribution",
			"entertainment",
			"office",
			"population",
			"president",
			"unit",
			"category",
			"cigarette",
			"context",
			"introduction",
			"opportunity",
			"performance",
			"driver",
			"flight",
			"length",
			"magazine",
			"newspaper",
			"relationship",
			"teaching",
			"cell",
			"dealer",
			"finding",
			"lake",
			"member",
			"message",
			"phone",
			"scene",
			"appearance",
			"association",
			"concept",
			"customer",
			"death",
			"discussion",
			"housing",
			"inflation",
			"insurance",
			"mood",
			"woman",
			"advice",
			"blood",
			"effort",
			"expression",
			"importance",
			"opinion",
			"payment",
			"reality",
			"responsibility",
			"situation",
			"skill",
			"statement",
			"wealth",
			"application",
			"city",
			"county",
			"depth",
			"estate",
			"foundation",
			"grandmother",
			"heart",
			"perspective",
			"photo",
			"recipe",
			"studio",
			"topic",
			"collection",
			"depression",
			"imagination",
			"passion",
			"percentage",
			"resource",
			"setting",
			"ad",
			"agency",
			"college",
			"connection",
			"criticism",
			"debt",
			"description",
			"memory",
			"patience",
			"secretary",
			"solution",
			"administration",
			"aspect",
			"attitude",
			"director",
			"personality",
			"psychology",
			"recommendation",
			"response",
			"selection",
			"storage",
			"version",
			"alcohol",
			"argument",
			"complaint",
			"contract",
			"emphasis",
			"highway",
			"loss",
			"membership",
			"possession",
			"preparation",
			"steak",
			"union",
			"agreement",
			"cancer",
			"currency",
			"employment",
			"engineering",
			"entry",
			"interaction",
			"mixture",
			"preference",
			"region",
			"republic",
			"tradition",
			"virus",
			"actor",
			"classroom",
			"delivery",
			"device",
			"difficulty",
			"drama",
			"election",
			"engine",
			"football",
			"guidance",
			"hotel",
			"owner",
			"priority",
			"protection",
			"suggestion",
			"tension",
			"variation",
			"anxiety",
			"atmosphere",
			"awareness",
			"bath",
			"bread",
			"candidate",
			"climate",
			"comparison",
			"confusion",
			"construction",
			"elevator",
			"emotion",
			"employee",
			"employer",
			"guest",
			"height",
			"leadership",
			"mall",
			"manager",
			"operation",
			"recording",
			"sample",
			"transportation",
			"charity",
			"cousin",
			"disaster",
			"editor",
			"efficiency",
			"excitement",
			"extent",
			"feedback",
			"guitar",
			"homework",
			"leader",
			"mom",
			"outcome",
			"permission",
			"presentation",
			"promotion",
			"reflection",
			"refrigerator",
			"resolution",
			"revenue",
			"session",
			"singer",
			"tennis",
			"basket",
			"bonus",
			"cabinet",
			"childhood",
			"church",
			"clothes",
			"coffee",
			"dinner",
			"drawing",
			"hair",
			"hearing",
			"initiative",
			"judgment",
			"lab",
			"measurement",
			"mode",
			"mud",
			"orange",
			"poetry",
			"police",
			"possibility",
			"procedure",
			"queen",
			"ratio",
			"relation",
			"restaurant",
			"satisfaction",
			"sector",
			"signature",
			"significance",
			"song",
			"tooth",
			"town",
			"vehicle",
			"volume",
			"wife",
			"accident",
			"airport",
			"appointment",
			"arrival",
			"assumption",
			"baseball",
			"chapter",
			"committee",
			"conversation",
			"database",
			"enthusiasm",
			"error",
			"explanation",
			"farmer",
			"gate",
			"girl",
			"hall",
			"historian",
			"hospital",
			"injury",
			"instruction",
			"maintenance",
			"manufacturer",
			"meal",
			"perception",
			"pie",
			"poem",
			"presence",
			"proposal",
			"reception",
			"replacement",
			"revolution",
			"river",
			"son",
			"speech",
			"tea",
			"village",
			"warning",
			"winner",
			"worker",
			"writer",
			"assistance",
			"breath",
			"buyer",
			"chest",
			"chocolate",
			"conclusion",
			"contribution",
			"cookie",
			"courage",
			"dad",
			"desk",
			"drawer",
			"establishment",
			"examination",
			"garbage",
			"grocery",
			"honey",
			"impression",
			"improvement",
			"independence",
			"insect",
			"inspection",
			"inspector",
			"king",
			"ladder",
			"menu",
			"penalty",
			"piano",
			"potato",
			"profession",
			"professor",
			"quantity",
			"reaction",
			"requirement",
			"salad",
			"sister",
			"supermarket",
			"tongue",
			"weakness",
			"wedding",
			"affair",
			"ambition",
			"analyst",
			"apple",
			"assignment",
			"assistant",
			"bathroom",
			"bedroom",
			"beer",
			"birthday",
			"celebration",
			"championship",
			"cheek",
			"client",
			"consequence",
			"departure",
			"diamond",
			"dirt",
			"ear",
			"fortune",
			"friendship",
			"funeral",
			"gene",
			"girlfriend",
			"hat",
			"indication",
			"intention",
			"lady",
			"midnight",
			"negotiation",
			"obligation",
			"passenger",
			"pizza",
			"platform",
			"poet",
			"pollution",
			"recognition",
			"reputation",
			"shirt",
			"sir",
			"speaker",
			"stranger",
			"surgery",
			"sympathy",
			"tale",
			"throat",
			"trainer",
			"uncle",
			"youth",
			"time",
			"work",
			"film",
			"water",
			"money",
			"example",
			"while",
			"business",
			"study",
			"game",
			"life",
			"form",
			"air",
			"day",
			"place",
			"number",
			"part",
			"field",
			"fish",
			"back",
			"process",
			"heat",
			"hand",
			"experience",
			"job",
			"book",
			"end",
			"point",
			"type",
			"home",
			"economy",
			"value",
			"body",
			"market",
			"guide",
			"interest",
			"state",
			"radio",
			"course",
			"company",
			"price",
			"size",
			"card",
			"list",
			"mind",
			"trade",
			"line",
			"care",
			"group",
			"risk",
			"word",
			"fat",
			"force",
			"key",
			"light",
			"training",
			"name",
			"school",
			"top",
			"amount",
			"level",
			"order",
			"practice",
			"research",
			"sense",
			"service",
			"piece",
			"web",
			"boss",
			"sport",
			"fun",
			"house",
			"page",
			"term",
			"test",
			"answer",
			"sound",
			"focus",
			"matter",
			"kind",
			"soil",
			"board",
			"oil",
			"picture",
			"access",
			"garden",
			"range",
			"rate",
			"reason",
			"future",
			"site",
			"demand",
			"exercise",
			"image",
			"case",
			"cause",
			"coast",
			"action",
			"age",
			"bad",
			"boat",
			"record",
			"result",
			"section",
			"building",
			"mouse",
			"cash",
			"class",
			"nothing",
			"period",
			"plan",
			"store",
			"tax",
			"side",
			"subject",
			"space",
			"rule",
			"stock",
			"weather",
			"chance",
			"figure",
			"man",
			"model",
			"source",
			"beginning",
			"earth",
			"program",
			"chicken",
			"design",
			"feature",
			"head",
			"material",
			"purpose",
			"question",
			"rock",
			"salt",
			"act",
			"birth",
			"car",
			"dog",
			"object",
			"scale",
			"sun",
			"note",
			"profit",
			"rent",
			"speed",
			"style",
			"war",
			"bank",
			"craft",
			"half",
			"inside",
			"outside",
			"standard",
			"bus",
			"exchange",
			"eye",
			"fire",
			"position",
			"pressure",
			"stress",
			"advantage",
			"benefit",
			"box",
			"frame",
			"issue",
			"step",
			"cycle",
			"face",
			"item",
			"metal",
			"paint",
			"review",
			"room",
			"screen",
			"structure",
			"view",
			"account",
			"ball",
			"discipline",
			"medium",
			"share",
			"balance",
			"bit",
			"black",
			"bottom",
			"choice",
			"gift",
			"impact",
			"machine",
			"shape",
			"tool",
			"wind",
			"address",
			"average",
			"career",
			"culture",
			"morning",
			"pot",
			"sign",
			"table",
			"task",
			"condition",
			"contact",
			"credit",
			"egg",
			"hope",
			"ice",
			"network",
			"north",
			"square",
			"attempt",
			"date",
			"effect",
			"link",
			"post",
			"star",
			"voice",
			"capital",
			"challenge",
			"friend",
			"self",
			"shot",
			"brush",
			"couple",
			"debate",
			"exit",
			"front",
			"function",
			"lack",
			"living",
			"plant",
			"plastic",
			"spot",
			"summer",
			"taste",
			"theme",
			"track",
			"wing",
			"brain",
			"button",
			"click",
			"desire",
			"foot",
			"gas",
			"influence",
			"notice",
			"rain",
			"wall",
			"base",
			"damage",
			"distance",
			"feeling",
			"pair",
			"savings",
			"staff",
			"sugar",
			"target",
			"text",
			"animal",
			"author",
			"budget",
			"discount",
			"file",
			"ground",
			"lesson",
			"minute",
			"officer",
			"phase",
			"reference",
			"register",
			"sky",
			"stage",
			"stick",
			"title",
			"trouble",
			"bowl",
			"bridge",
			"campaign",
			"character",
			"club",
			"edge",
			"evidence",
			"fan",
			"letter",
			"lock",
			"maximum",
			"novel",
			"option",
			"pack",
			"park",
			"plenty",
			"quarter",
			"skin",
			"sort",
			"weight",
			"baby",
			"background",
			"carry",
			"dish",
			"factor",
			"fruit",
			"glass",
			"joint",
			"master",
			"muscle",
			"red",
			"strength",
			"traffic",
			"trip",
			"vegetable",
			"appeal",
			"chart",
			"gear",
			"ideal",
			"kitchen",
			"land",
			"log",
			"mother",
			"net",
			"party",
			"principle",
			"relative",
			"sale",
			"season",
			"signal",
			"spirit",
			"street",
			"tree",
			"wave",
			"belt",
			"bench",
			"commission",
			"copy",
			"drop",
			"minimum",
			"path",
			"progress",
			"project",
			"sea",
			"south",
			"status",
			"stuff",
			"ticket",
			"tour",
			"angle",
			"blue",
			"breakfast",
			"confidence",
			"daughter",
			"degree",
			"doctor",
			"dot",
			"dream",
			"duty",
			"essay",
			"father",
			"fee",
			"finance",
			"hour",
			"juice",
			"limit",
			"luck",
			"milk",
			"mouth",
			"peace",
			"pipe",
			"seat",
			"stable",
			"storm",
			"substance",
			"team",
			"trick",
			"afternoon",
			"bat",
			"beach",
			"blank",
			"catch",
			"chain",
			"consideration",
			"cream",
			"crew",
			"detail",
			"gold",
			"interview",
			"kid",
			"mark",
			"match",
			"mission",
			"pain",
			"pleasure",
			"score",
			"screw",
			"sex",
			"shop",
			"shower",
			"suit",
			"tone",
			"window",
			"agent",
			"band",
			"block",
			"bone",
			"calendar",
			"cap",
			"coat",
			"contest",
			"corner",
			"court",
			"cup",
			"district",
			"door",
			"east",
			"finger",
			"garage",
			"guarantee",
			"hole",
			"hook",
			"implement",
			"layer",
			"lecture",
			"lie",
			"manner",
			"meeting",
			"nose",
			"parking",
			"partner",
			"profile",
			"respect",
			"rice",
			"routine",
			"schedule",
			"swimming",
			"telephone",
			"tip",
			"winter",
			"airline",
			"bag",
			"battle",
			"bed",
			"bill",
			"bother",
			"cake",
			"code",
			"curve",
			"designer",
			"dimension",
			"dress",
			"ease",
			"emergency",
			"evening",
			"extension",
			"farm",
			"fight",
			"gap",
			"grade",
			"holiday",
			"horror",
			"horse",
			"host",
			"husband",
			"loan",
			"mistake",
			"mountain",
			"nail",
			"noise",
			"occasion",
			"package",
			"patient",
			"pause",
			"phrase",
			"proof",
			"race",
			"relief",
			"sand",
			"sentence",
			"shoulder",
			"smoke",
			"stomach",
			"string",
			"tourist",
			"towel",
			"vacation",
			"west",
			"wheel",
			"wine",
			"arm",
			"aside",
			"associate",
			"bet",
			"blow",
			"border",
			"branch",
			"breast",
			"brother",
			"buddy",
			"bunch",
			"chip",
			"coach",
			"cross",
			"document",
			"draft",
			"dust",
			"expert",
			"floor",
			"god",
			"golf",
			"habit",
			"iron",
			"judge",
			"knife",
			"landscape",
			"league",
			"mail",
			"mess",
			"native",
			"opening",
			"parent",
			"pattern",
			"pin",
			"pool",
			"pound",
			"request",
			"salary",
			"shame",
			"shelter",
			"shoe",
			"silver",
			"tackle",
			"tank",
			"trust",
			"assist",
			"bake",
			"bar",
			"bell",
			"bike",
			"blame",
			"boy",
			"brick",
			"chair",
			"closet",
			"clue",
			"collar",
			"comment",
			"conference",
			"devil",
			"diet",
			"fear",
			"fuel",
			"glove",
			"jacket",
			"lunch",
			"monitor",
			"mortgage",
			"nurse",
			"pace",
			"panic",
			"peak",
			"plane",
			"reward",
			"row",
			"sandwich",
			"shock",
			"spite",
			"spray",
			"surprise",
			"till",
			"transition",
			"weekend",
			"welcome",
			"yard",
			"alarm",
			"bend",
			"bicycle",
			"bite",
			"blind",
			"bottle",
			"cable",
			"candle",
			"clerk",
			"cloud",
			"concert",
			"counter",
			"flower",
			"grandfather",
			"harm",
			"knee",
			"lawyer",
			"leather",
			"load",
			"mirror",
			"neck",
			"pension",
			"plate",
			"purple",
			"ruin",
			"ship",
			"skirt",
			"slice",
			"snow",
			"specialist",
			"stroke",
			"switch",
			"trash",
			"tune",
			"zone",
			"anger",
			"award",
			"bid",
			"bitter",
			"boot",
			"bug",
			"camp",
			"candy",
			"carpet",
			"cat",
			"champion",
			"channel",
			"clock",
			"comfort",
			"cow",
			"crack",
			"engineer",
			"entrance",
			"fault",
			"grass",
			"guy",
			"hell",
			"highlight",
			"incident",
			"island",
			"joke",
			"jury",
			"leg",
			"lip",
			"mate",
			"motor",
			"nerve",
			"passage",
			"pen",
			"pride",
			"priest",
			"prize",
			"promise",
			"resident",
			"resort",
			"ring",
			"roof",
			"rope",
			"sail",
			"scheme",
			"script",
			"sock",
			"station",
			"toe",
			"tower",
			"truck",
			"witness",
			"a",
			"you",
			"it",
			"can",
			"will",
			"if",
			"one",
			"many",
			"most",
			"other",
			"use",
			"make",
			"good",
			"look",
			"help",
			"go",
			"great",
			"being",
			"few",
			"might",
			"still",
			"public",
			"read",
			"keep",
			"start",
			"give",
			"human",
			"local",
			"general",
			"she",
			"specific",
			"long",
			"play",
			"feel",
			"high",
			"tonight",
			"put",
			"common",
			"set",
			"change",
			"simple",
			"past",
			"big",
			"possible",
			"particular",
			"today",
			"major",
			"personal",
			"current",
			"national",
			"cut",
			"natural",
			"physical",
			"show",
			"try",
			"check",
			"second",
			"call",
			"move",
			"pay",
			"let",
			"increase",
			"single",
			"individual",
			"turn",
			"ask",
			"buy",
			"guard",
			"hold",
			"main",
			"offer",
			"potential",
			"professional",
			"international",
			"travel",
			"cook",
			"alternative",
			"following",
			"special",
			"working",
			"whole",
			"dance",
			"excuse",
			"cold",
			"commercial",
			"low",
			"purchase",
			"deal",
			"primary",
			"worth",
			"fall",
			"necessary",
			"positive",
			"produce",
			"search",
			"present",
			"spend",
			"talk",
			"creative",
			"tell",
			"cost",
			"drive",
			"green",
			"support",
			"glad",
			"remove",
			"return",
			"run",
			"complex",
			"due",
			"effective",
			"middle",
			"regular",
			"reserve",
			"independent",
			"leave",
			"original",
			"reach",
			"rest",
			"serve",
			"watch",
			"beautiful",
			"charge",
			"active",
			"break",
			"negative",
			"safe",
			"stay",
			"visit",
			"visual",
			"affect",
			"cover",
			"report",
			"rise",
			"walk",
			"white",
			"beyond",
			"junior",
			"pick",
			"unique",
			"anything",
			"classic",
			"final",
			"lift",
			"mix",
			"private",
			"stop",
			"teach",
			"western",
			"concern",
			"familiar",
			"fly",
			"official",
			"broad",
			"comfortable",
			"gain",
			"maybe",
			"rich",
			"save",
			"stand",
			"young",
			"fail",
			"heavy",
			"hello",
			"lead",
			"listen",
			"valuable",
			"worry",
			"handle",
			"leading",
			"meet",
			"release",
			"sell",
			"finish",
			"normal",
			"press",
			"ride",
			"secret",
			"spread",
			"spring",
			"tough",
			"wait",
			"brown",
			"deep",
			"display",
			"flow",
			"hit",
			"objective",
			"shoot",
			"touch",
			"cancel",
			"chemical",
			"cry",
			"dump",
			"extreme",
			"push",
			"conflict",
			"eat",
			"fill",
			"formal",
			"jump",
			"kick",
			"opposite",
			"pass",
			"pitch",
			"remote",
			"total",
			"treat",
			"vast",
			"abuse",
			"beat",
			"burn",
			"deposit",
			"print",
			"raise",
			"sleep",
			"somewhere",
			"advance",
			"anywhere",
			"consist",
			"dark",
			"double",
			"draw",
			"equal",
			"fix",
			"hire",
			"internal",
			"join",
			"kill",
			"sensitive",
			"tap",
			"win",
			"attack",
			"claim",
			"constant",
			"drag",
			"drink",
			"guess",
			"minor",
			"pull",
			"raw",
			"soft",
			"solid",
			"wear",
			"weird",
			"wonder",
			"annual",
			"count",
			"dead",
			"doubt",
			"feed",
			"forever",
			"impress",
			"nobody",
			"repeat",
			"round",
			"sing",
			"slide",
			"strip",
			"whereas",
			"wish",
			"combine",
			"command",
			"dig",
			"divide",
			"equivalent",
			"hang",
			"hunt",
			"initial",
			"march",
			"mention",
			"smell",
			"spiritual",
			"survey",
			"tie",
			"adult",
			"brief",
			"crazy",
			"escape",
			"gather",
			"hate",
			"prior",
			"repair",
			"rough",
			"sad",
			"scratch",
			"sick",
			"strike",
			"employ",
			"external",
			"hurt",
			"illegal",
			"laugh",
			"lay",
			"mobile",
			"nasty",
			"ordinary",
			"respond",
			"royal",
			"senior",
			"split",
			"strain",
			"struggle",
			"swim",
			"train",
			"upper",
			"wash",
			"yellow",
			"convert",
			"crash",
			"dependent",
			"fold",
			"funny",
			"grab",
			"hide",
			"miss",
			"permit",
			"quote",
			"recover",
			"resolve",
			"roll",
			"sink",
			"slip",
			"spare",
			"suspect",
			"sweet",
			"swing",
			"twist",
			"upstairs",
			"usual",
			"abroad",
			"brave",
			"calm",
			"concentrate",
			"estimate",
			"grand",
			"male",
			"mine",
			"prompt",
			"quiet",
			"refuse",
			"regret",
			"reveal",
			"rush",
			"shake",
			"shift",
			"shine",
			"steal",
			"suck",
			"surround",
			"anybody",
			"bear",
			"brilliant",
			"dare",
			"dear",
			"delay",
			"drunk",
			"female",
			"hurry",
			"inevitable",
			"invite",
			"kiss",
			"neat",
			"pop",
			"punch",
			"quit",
			"reply",
			"representative",
			"resist",
			"rip",
			"rub",
			"silly",
			"smile",
			"spell",
			"stretch",
			"stupid",
			"tear",
			"temporary",
			"tomorrow",
			"wake",
			"wrap",
			"yesterday"
		};

		public string[] verbs =
		{
			"abacinate",
			"abbreviate",
			"abdictate",
			"aberuncate",
			"abjudicate",
			"abjure",
			"abnegate",
			"abide",
			"abominate",
			"abound",
			"abrogate",
			"abscind",
			"absorb",
			"absume",
			"abvolate",
			"acceed",
			"accelerate",
			"accessorize",
			"accinge",
			"accommodate",
			"accompany",
			"accost",
			"accept",
			"accrue",
			"accuse",
			"achieve",
			"acknowledge",
			"acquire",
			"activate",
			"ace",
			"ache",
			"achieve",
			"adapt",
			"add",
			"addict",
			"adjoin",
			"adjure",
			"adjust",
			"adduce",
			"adhere",
			"adlib",
			"administer",
			"admire",
			"admit",
			"adopt",
			"adore",
			"advise",
			"affect",
			"afford",
			"affuse",
			"agatize",
			"age",
			"agglomerate",
			"aggrandise",
			"aggravate",
			"agree",
			"aggregate",
			"agitate",
			"agonize",
			"agree",
			"aim",
			"air-brush",
			"airlift",
			"alarm",
			"alchemize",
			"algorithmize",
			"alias",
			"alieve",
			"align",
			"allay",
			"allegorize",
			"alleviate",
		 	"allocate",
			"allow",
			"alter",
			"alternate",
			"amass",
			"amble",
			"ambiguate",
			"ameliorate",
			"amortize",
			"amplify",
			"amputate",
			"anachronize",
			"analogise",
			"analyze",
			"anarchize",
			"anchor",
			"anger",
			"anguish",
			"angulate",
			"animate",
			"animadvert",
			"annex",
			"annihilate",
			"annotate",
			"announce",
			"annunciate",
			"annoint",
			"answer",
			"antagonize",
			"antecede",
			"anthropomorphize",
			"anticipate",
			"apologize",
			"apocopate",
			"appeal",
			"appear",
			"apply",
			"appreciate",
			"approach",
			"applaud",
			"appoint",
			"apportion",
			"apprehend",
			"approbate",
			"appropriate",
			"approve",
			"architect",
			"argue",
			"arise",
			"arpeggiate",
			"arrange",
			"arrive",
			"articulate",
			"ascend",
			"ascertain",
			"ASCIIfy",
			"ascribe",
			"ask",
			"aspect",
			"aspire",
			"assail",
			"assert",
			"assess",
			"assemble",
			"assist",
			"assimulate",
			"astound",
			"assume",
			"assure",
			"astonish",
			"atrophy",
			"attach",
			"attack",
			"attempt",
			"attend",
			"attract",
			"attest",
			"attribute",
			"attenuate",
			"auction",
			"augment",
			"auscult",
			"austemper",
			"avoid",
			"avolate",
			"await",
			"award",
			"author",
			"authorize",
			"automate",
			"avenge",
			"avail",
			"avert",
			"avouch",
			"awake",
			"babysit",
			"backfire",
			"backflip",
			"backhaul",
			"backpack",
			"backpedal",
			"backscatter",
			"backstab",
			"backtalk",
			"backtrack",
			"backwash",
			"bake",
			"bathe",
			"babble",
			"backbite",
			"backfire",
			"badger",
			"badmouth",
			"baffle",
			"bait",
			"balbutiate",
			"balk",
			"ballast",
			"balloon",
			"ballpark",
			"ballyhoo",
			"bamboozle",
			"ban",
			"banalize",
			"bandy",
			"bang",
			"banish",
			"banish",
			"bankrupt",
			"baptize",
			"barbecue",
			"barricade",
			"bathe",
			"baulk",
			"bayonet",
			"beach",
			"bead",
			"bear",
			"beat",
			"beatbox",
			"beautify",
			"becalm",
			"become",
			"bedaub",
			"bedazzle",
			"bedevil",
			"bedrum",
			"bedraggle",
			"beeline",
			"beg",
			"begin",
			"begowk",
			"begrime",
			"begrudge",
			"beguess",
			"beguile",
			"behave",
			"behelm",
			"belace",
			"believe",
			"belittle",
			"belong",
			"bellyflop",
			"bemoan",
			"bemonster",
			"bemuse",
			"benchmark",
			"bend",
			"benefit",
			"benumb",
			"bepearl",
			"berate",
			"bereave",
			"bequeath",
			"beseech",
			"besmirch",
			"bespread",
			"best",
			"bet",
			"betray",
			"betroth",
			"bevel",
			"bewilder",
			"bewitch",
			"bibble",
			"biff",
			"bifurcate",
			"billow",
			"bind",
			"birle",
			"bisect",
			"bite",
			"blacken",
			"blacklist",
			"blackmail",
			"blame",
			"blanch",
			"blanket",
			"blaze",
			"bleach",
			"bleed",
			"blemish",
			"blench",
			"blend",
			"blink",
			"blindfold",
			"blitz",
			"blizzard",
			"bloat",
			"block",
			"bloom",
			"blossom",
			"bloviate",
			"blow",
			"blow-dry",
			"bluejack",
			"blowtorch",
			"blueprint",
			"bluff",
			"blunder",
			"blunge",
			"blunt",
			"blur",
			"blush",
			"bluster",
			"boast",
			"bobble",
			"body-check",
			"body-surf",
			"body-slam",
			"bog",
			"bogart",
			"bogey",
			"boggle",
			"boil",
			"bolster",
			"bomb",
			"bombard",
			"bonk",
			"bonify",
			"boobytrap",
			"book-keep",
			"boom",
			"boomerang",
			"boondoggle",
			"boost",
			"boot",
			"bootleg",
			"bootstrap",
			"border",
			"bore",
			"borrow",
			"boss",
			"botanize",
			"botch",
			"bother",
			"bottleneck",
			"bottom",
			"bounce",
			"bow",
			"bowse",
			"box",
			"boycot",
			"bracket",
			"brag",
			"braid",
			"brainstorm",
			"brainwash",
			"braise",
			"brake",
			"branch",
			"brandish",
			"brand",
			"brangle",
			"brave",
			"braze",
			"break",
			"breakdance",
			"breathalyze",
			"breathe",
			"breed",
			"breeze",
			"breach",
			"breed",
			"brew",
			"bribe",
			"bridge",
			"brief",
			"brighten",
			"brim",
			"bring",
			"bristle",
			"broach",
			"broadcast",
			"broaden",
			"broadside",
			"broil",
			"brood",
			"browbeat",
			"browse",
			"bruise",
			"buck",
			"buckle",
			"budge",
			"buffalo",
			"buffer",
			"build",
			"bully",
			"bumfuzzle",
			"bumrush",
			"bundle",
			"bunny-hop",
			"bunt",
			"buoy",
			"burden",
			"burgeon",
			"burglarize",
			"burn",
			"burnbeat",
			"burrow",
			"burst",
			"bushwhack",
			"bust",
			"bustle",
			"busy",
			"butter",
			"buttress",
			"buy",
			"buzz",
			"cache",
			"cackle",
			"caffeinate",
			"cage",
			"cajole",
			"calamistrate",
			"calcify",
			"calculate",
			"calendarize",
			"care",
			"calk",
			"call",
			"calligraph",
			"camouflage",
			"camp",
			"campaign",
			"cancel",
			"cannibalize",
			"cannonize",
			"canopy",
			"canvas",
			"capitalize",
			"capitulate",
			"capture",
			"caption",
			"caramelize",
			"caravan",
			"carcerate",
			"caress",
			"caretake",
			"caricature",
			"carol",
			"carouse",
			"carpool",
			"carry",
			"cascade",
			"castigate",
			"cartwheel",
			"catalogue",
			"catalyze",
			"catapult",
			"catch",
			"categorize",
			"cater",
			"caulk",
			"caution",
			"cave",
			"cease",
			"celebrate",
			"censor",
			"centralize",
			"centrifuge",
			"chaff",
			"chain-smoke",
			"chain",
			"chalk it up",
			"change",
			"chant",
			"charm",
			"chart",
			"charter",
			"chase",
			"cheat",
			"cheer",
			"cheerlead",
			"cherrypick",
			"chew",
			"chirp",
			"choreograph",
			"choose",
			"chop",
			"churn",
			"cinematize",
			"circle",
			"claim",
			"clarify",
			"clash",
			"classicise",
			"cleave",
			"clench",
			"click",
			"cliffhang",
			"climax",
			"climb",
			"clinch",
			"cling",
			"clone",
			"close",
			"closet",
			"clothesline",
			"clothespin",
			"cloud",
			"co-chair",
			"coach",
			"coalesce",
			"cocoon",
			"codify",
			"collapse",
			"collar",
			"collide",
			"colloquiallize",
			"collude",
			"comb",
			"combat",
			"combine",
			"come",
			"commandeer",
			"commend",
			"comment",
			"commiserate",
			"commit",
			"communicate",
			"commute",
			"compare",
			"compass",
			"compensate",
			"compete",
			"complain",
			"complete",
			"concern",
			"confirm",
			"congregate",
			"consent",
			"consider",
			"consist",
			"consult",
			"contain",
			"continue",
			"convince",
			"cook",
			"coordinate",
			"cost",
			"count",
			"cower",
			"crawl",
			"create",
			"creep",
			"criticize",
			"cry",
			"cut",
			"dance",
			"dare",
			"date",
			"daze",
			"deal",
			"deceive",
			"decide",
			"decypher",
			"defer",
			"delay",
			"deliver",
			"demand",
			"demolish",
			"deny",
			"depend",
			"deride",
			"describe",
			"deserve",
			"desire",
			"destroy",
			"determine",
			"develop",
			"differ",
			"disagree",
			"discover",
			"discuss",
			"dislike",
			"disorganize",
			"dissolve",
			"distribute",
			"dive",
			"do",
			"doubt",
			"drag",
			"dream",
			"drill",
			"drink",
			"drive",
			"drop",
			"dry",
			"earn",
			"eat",
			"emphasize",
			"enable",
			"encourage",
			"engage",
			"enhance",
			"enjoy",
			"ensure",
			"entail",
			"enter",
			"establish",//Panda
			"examine",
			"exist",
			"expand",
			"expect",
			"experiment",
			"explain",
			"explore",
			"extend",
			"fail",
			"fall",
			"feed",
			"feel",
			"fight",
			"fillibuster",
			"find",
			"finish",
			"fit",
			"fly",
			"fold",
			"follow",
			"forbid",
			"forget",
			"forgive",
			"freeze",
			"fry",
			"generate",
			"get",
			"give",
			"go",
			"grind",
			"grow",
			"hang",
			"happen",
			"hate",
			"have",
			"hear",
			"hesitate",
			"hide",
			"hit",
			"hold",
			"hop",
			"hope",
			"hug",
			"hurry",
			"hurt",
			"identify",
			"ignore",
			"illustrate",
			"imagine",
			"imply",
			"impress",
			"improve",
			"include",
			"incorporate",
			"indicate",
			"inform",
			"insist",
			"install",
			"intend",
			"introduce",
			"invest",
			"investigate",
			"involve",
			"iron",
			"jog",
			"jump",
			"justify",
			"keep",
			"kick",
			"kiss",
			"kneel",
			"knit",
			"know",
			"lack",
			"lampoon",
			"laugh",
			"lay",
			"lead",
			"lean",
			"leap",
			"learn",
			"leave",
			"lend",
			"lie",
			"lift",
			"light",
			"like",
			"listen",
			"look",
			"lose",
			"love",
			"maintain",
			"make",
			"manage",
			"matter",
			"may",
			"mean",
			"measure",
			"meet",
			"melt",
			"mention",
			"might",
			"mind",
			"miss",
			"mix",
			"mow",
			"must",
			"need",
			"neglect",
			"negotiate",
			"observe",
			"obtain",
			"occur",
			"offer",
			"open",
			"operate",
			"order",
			"organize",
			"overcome",
			"overtake",
			"owe",
			"own",
			"paint",
			"participate",
			"pay",
			"peel",
			"perform",
			"persuade",
			"pinch",
			"plan",
			"play",
			"point",
			"possess",
			"postpone",
			"pour",
			"practice",
			"prefer",
			"prepare",
			"pretend",
			"prevent",
			"proceed",
			"promise",
			"propose",
			"protect",
			"prove",
			"pull",
			"punch",
			"pursue",
			"push",
			"put",
			"qualify",
			"quit",
			"react",
			"read",
			"realize",
			"recall",
			"receive",
			"recollect",
			"recommend",
			"reduce",
			"refer",
			"reflect",
			"refuse",
			"regret",
			"relate",
			"relax",
			"relieve",
			"rely",
			"remain",
			"remember",
			"remind",
			"repair",
			"replace",
			"represent",
			"require",
			"resent",
			"resist",
			"retain",
			"retire",
			"rid",
			"ride",
			"ring",
			"rise",
			"risk",
			"roast",
			"run",
			"sanction",
			"satisfy",
			"say",
			"scrub",
			"see",
			"seem",
			"sell",
			"send",
			"serve",
			"set",
			"settle",
			"sew",
			"shake",
			"shall",
			"shed",
			"shine",
			"shoot",
			"should",
			"show",
			"shrink",
			"shut",
			"sing",
			"sink",
			"sit",
			"ski",
			"sleep",
			"slice",
			"slide",
			"slip",
			"smell",
			"snore",
			"soar",
			"solve",
			"sow",
			"speak",
			"specify",
			"spell",
			"spend",
			"spill",
			"spit",
			"spread",
			"squat",
			"stack",
			"stand",
			"start",
			"steal",
			"stick",
			"sting",
			"stink",
			"stir",
			"stop",
			"stretch",
			"strike",
			"struggle",
			"study",
			"submit",
			"succeed",
			"suffer",
			"suggest",
			"summon",
			"supply",
			"suppose",
			"surprise",
			"survive",
			"swear",
			"sweep",
			"swell",
			"swim",
			"swing",
			"take",
			"talk",
			"taste",
			"teach",
			"tear",
			"tell",
			"tend",
			"think",
			"threaten",
			"throw",
			"tiptoe",
			"tolerate",
			"translate",
			"try",
			"understand",
			"vacuum",
			"value",
			"vary",
			"volunteer",
			"wait",
			"wake",
			"walk",
			"want",
			"warn",
			"wash",
			"watch",
			"wave",
			"wear",
			"weep",
			"weigh",
			"whip",
			"will",
			"win",
			"wish",
			"would",
			"write"
		};

		public string[] prepositions =
		{
			"aboard",
			"about",
			"above",
			"across",
			"after",
			"against",
			"along",
			"amid",
			"among",
			"anti",
			"around",
			"as",
			"at",
			"before",
			"behind",
			"below",
			"beneath",
			"beside",
			"besides",
			"between",
			"beyond",
			"but",
			"by",
			"concerning",
			"considering",
			"despite",
			"down",
			"during",
			"except",
			"excepting",
			"excluding",
			"following",
			"for",
			"from",
			"in",
			"inside",
			"into",
			"like",
			"minus",
			"near",
			"of",
			"off",
			"on",
			"onto",
			"opposite",
			"outside",
			"over",
			"past",
			"per",
			"plus",
			"regarding",
			"round",
			"save",
			"since",
			"than",
			"through",
			"to",
			"toward",
			"towards",
			"under",
			"underneath",
			"unlike",
			"until",
			"up",
			"upon",
			"versus",
			"via",
			"with",
			"within",
			"without"
		};

		public string[] inventions =
		{   "watch",
			"cell phone",
			"tower",
			"computer",
			"fridge",
			"Saas",
			"air balloon experiment",
			"adhesives glue",
			"adhesives tape",
			"aerosol spray cans",
			"agriculture",
			"aibo",
			"air bags",
			"air balloons",
			"air brakes",
			"air conditioning",
			"air ships",
			"airplane/aviation",
			"alcoholic beverages",
			"alternating current",
			"alternative energy",
			"altimeter",
			"aluminum foil",
			"ambulance",
			"anemometer",
			"answering machines",
			"antibody labeling agents",
			"antiseptics",
			"apple computers",
			"aqualung",
			"arc transmitter",
			"archimedes screw",
			"armillary sphere",
			"artificial heart",
			"asphalt",
			"aspirin",
			"assembly line",
			"astroturf",
			"atari computers",
			"atm - automatic teller machines",
			"atomic bomb",
			"atomic clock",
			"audio tape recording",
			"auto-tune",
			"automated electrified monorail systems",
			"automatic doors",
			"automobile",
			"baby carriage",
			"bakelite",
			"ball point pens",
			"ballistic missiles",
			"balloons and blimps ",
			"balloons ",
			"band-aids",
			"bar codes",
			"barbecue",
			"barbed wire",
			"barbie dolls",
			"barometer",
			"bartholdi fountain",
			"baseball equipment",
			"basic ",
			"basketball",
			"bathrooms ",
			"batteries",
			"beauty ",
			"beds",
			"beer",
			"bells",
			"beverages",
			"blenders",
			"bic pens",
			"bicycles",
			"bifocals",
			"bikini",
			"bingo",
			"biofilters",
			"biometric",
			"blood banks",
			"blue jeans",
			"boardgames",
			"body armor",
			"boilers",
			"boomerang",
			"bourdon tube pressure guage",
			"bra",
			"braces ",
			"braille",
			"brush ",
			"bubble gum",
			"bulldozer",
			"bunsen burners",
			"butterick ",
			"calendars and clocks",
			"calculators",
			"photography",
			"cans",
			"candy",
			"carborundum",
			"card games",
			"cardiac pacemaker",
			"carmex",
			"cars",
			"carousels",
			"cash registers",
			"cassette tapes",
			"cat eyes",
			"catheter",
			"cathode ray tube",
			"cat scans",
			"ccd",
			"cell ",
			"cellophane film",
			"celsius thermometer",
			"census",
			"chain saws",
			"champagne",
			"chapstick",
			"cheerleading ",
			"cheese in a can",
			"cheese slicer",
			"cheesecake",
			"chewing gum",
			"chia pets",
			"chinese inventions",
			"chocolate",
			"christmas lights",
			"cigarettes",
			"clarinet",
			"clermont ",
			"cloning",
			"closed captioning",
			"clothes",
			"coat hangers",
			"coca-cola",
			"cochlear implants ",
			"coffee",
			"cold fusion energy",
			"color television",
			"colt revolver",
			"combustion engine ",
			"combustion engine ",
			"comic books",
			"communications",
			"compact discs",
			"compass",
			"computers",
			"computer chess",
			"computer keyboard",
			"computer peripherals",
			"computer printers",
			"computerized banking",
			"concrete and cement",
			"construction materials",
			"contacts",
			"cookies",
			"cordite",
			"corkscrews",
			"corn flakes",
			"cortisone",
			"cosmetics",
			"cotton gin",
			"crash test dummies",
			"crayons",
			"cray supercomputer",
			"credit cards",
			"crossword puzzles",
			"cuisinarts",
			"cyclotron",
			"earmuffs",
			"ear plugs",
			"easter egg",
			"eiffel tower",
			"elastic",
			"electric blanket",
			"electric chair",
			"electric motor",
			"electric vehicles",
			"electromagnet",
			"electron tubes",
			"electron microscope",
			"electrophotography",
			"electroplating",
			"electroscope",
			"elevator",
			"email",
			"eniac computer",
			"engines",
			"engraving",
			"escalator",
			"etch-a-sketch",
			"ethernet",
			"exoskeleton",
			"explosives",
			"eyeglasses",
			"fabrics",
			"facebook",
			"fahrenheit thermometer",
			"scarecrow",
			"fax machine",
			"ferris wheel",
			"fiber optics",
			"film",
			"fingerprinting",
			"firearms",
			"flashlight",
			"flight",
			"floppy disk",
			"fluorescent lamps",
			"flying machines",
			"flying shuttle",
			"foam finger",
			"football",
			"footbag",
			"fortran",
			"fountain pens",
			"freezers",
			"french fries",
			"french horns",
			"freon",
			"frisbee",
			"frozen foods",
			"fuel cells",
			"jacuzzi",
			"jukeboxes ",
			"jacuzzi",
			"jet ski",
			"jet aircraft",
			"jigsaw puzzles",
			"jock strap",
			"jukebox",
			"peanut butter",
			"package",
			"pagers",
			"paint roller",
			"panty hose",
			"paper",
			"paperclip",
			"paper punch",
			"parachutes",
			"pascaline calculator",
			"pasteurization",
			"peanut butter",
			"penicillin",
			"pens/pencils",
			"pepsi-cola",
			"perfume",
			"periodic table",
			"periscope",
			"perpetual motion machine",
			"phonograph",
			"photocopier",
			"photography still",
			"photophone",
			"photovoltics",
			"piano",
			"piggy bank",
			"pill",
			"pillsbury doughboy",
			"pinball",
			"pizza",
			"plastic",
			"play-doh",
			"pliers",
			"plows",
			"plumbing",
			"pneumatic tools",
			"polaroid photography",
			"police technology",
			"polyester",
			"polygraph",
			"polystyrene",
			"pom poms",
			"popsicle",
			"postage stamps",
			"post-it notes",
			"potato chips",
			"mr potato head",
			"power loom",
			"printers ",
			"printing",
			"prosthetics",
			"prozac",
			"punch cards",
			"push pins",
			"puzzles",
			"pvdc",
			"pvc ",
			"safety pins to syringes: ",
			"safety pins",
			"sailboards",
			"sandwich",
			"saran wrap",
			"satellites",
			"saxophone",
			"scanning tunneling microscope ",
			"scissors",
			"scooters",
			"scotch tape",
			"screws and screwdrivers",
			"scuba diving equipment",
			"sea-cretion",
			"seat belts",
			"seaplane",
			"seismograph",
			"self-cleaning house",
			"segway human transporter",
			"seven-up",
			"sewing machines",
			"shrapnel",
			"shoes",
			"shoe manufacturing machine",
			"sierra sam",
			"silly putty",
			"sign language ",
			"signaling system ",
			"skyscrapers",
			"skateboard",
			"skates ",
			"sleeping car ",
			"sliced bread ",
			"slide rule",
			"slinky",
			"slot machines",
			"smart pills",
			"snowblower",
			"snowmaking machines",
			"snowmobiles",
			"soap",
			"soccer",
			"socks",
			"soda fountain",
			"softball",
			"soft drinks",
			"software",
			"solar-powered cars",
			"solar cells",
			"sonar",
			"sound recording",
			"soup ",
			"spacesuits",
			"spacewar",
			"spark plugs",
			"sunglasses",
			"spectograph",
			"spinning jenny",
			"spinning mule",
			"spinning wheel",
			"spork",
			"sportsdrink",
			"sporting goods",
			"sprinkler systems",
			"stamps",
			"staplers",
			"statue of liberty",
			"steamboats",
			"steam engines",
			"steel",
			"stem cell research",
			"stereo",
			"stoves",
			"straws",
			"street sweeper",
			"styrofoam",
			"submarines",
			"sugar processing evaporator",
			"sunscreen",
			"supercomputer",
			"superconductors",
			"super soaker",
			"suspenders",
			"swimming pools",
			"syringe",
			"tampons",
			"tupperware",
			"trumpets ",
			"tagamet",
			"tampons",
			"tape recorders",
			"tattoos",
			"taxis",
			"tea",
			"teddy bears",
			"teflon",
			"tekno bubbles",
			"telegraph",
			"telemetry",
			"telephones",
			"telephone switching system",
			"telescope",
			"televisions",
			"tennis",
			"tesla coil",
			"tetracycline",
			"thermometers",
			"thermos",
			"thong",
			"tidal power plants",
			"timekeeping",
			"timken",
			"tinkertoys",
			"tires",
			"toasters",
			"plumbing",
			"tom thumb locomotive",
			"tools",
			"toothpaste",
			"totalizator automatic",
			"touch screen technology",
			"toys",
			"tractors",
			"traffic lights",
			"trampoline",
			"transistor",
			"transportation",
			"trivial pursuit",
			"trumpet",
			"tele-typewriter",
			"tungsten wire",
			"tupperware",
			"tuxedo",
			"tv dinners",
			"typewriters",
			"walkman",
			"wallpaper",
			"washing machines",
			"watches",
			"water frames",
			"water heaters",
			"water wheel",
			"waterskis",
			"wd-40",
			"weather instruments",
			"welding tools",
			"wheel",
			"wheelbarrow",
			"wheelchairs",
			"windows",
			"windshield wipers",
			"white-out",
			"wrenches",
			"writing instruments",
			"telephone"
		};

		public string[] hexagrams =
		{
			"Hexagram 1, Creative",
			"Hexagram 2, Receptive",
			"Hexagram 3, Difficulty",
			"Hexagram 4, Folly",
			"Hexagram 5, Waiting",
			"Hexagram 6, Conflict",
			"Hexagram 7, Army",
			"Hexagram 8, Union",
			"Hexagram 9, Taming",
			"Hexagram 10, Treading",
			"Hexagram 11, Peace",
			"Hexagram 12, Standstill",
			"Hexagram 13, Fellowship",
			"Hexagram 14, Possession",
			"Hexagram 15, Modesty",
			"Hexagram 16, Enthusiasm",
			"Hexagram 17, Following",
			"Hexagram 18, Decay",
			"Hexagram 19, Approach",
			"Hexagram 20, View",
			"Hexagram 21, Biting",
			"Hexagram 22, Grace",
			"Hexagram 23, Splitting",
			"Hexagram 24, Return",
			"Hexagram 25, Innocence",
			"Hexagram 26, Taming",
			"Hexagram 27, Mouth",
			"Hexagram 28, Preponderance",
			"Hexagram 29, Abysmal",
			"Hexagram 30, Clinging",
			"Hexagram 31, Influence",
			"Hexagram 32, Duration",
			"Hexagram 33, Retreat",
			"Hexagram 34, Power",
			"Hexagram 35, Progress",
			"Hexagram 36, Darkening",
			"Hexagram 37, Family",
			"Hexagram 38, Opposition",
			"Hexagram 39, Obstruction",
			"Hexagram 40, Deliverance",
			"Hexagram 41, Decrease",
			"Hexagram 42, Increase",
			"Hexagram 43, Resoluteness",
			"Hexagram 44, Coming",
			"Hexagram 45, Gathering",
			"Hexagram 46, Pushing",
			"Hexagram 47, Oppression",
			"Hexagram 48, Well",
			"Hexagram 49, Revolution",
			"Hexagram 50, Caldron",
			"Hexagram 51, Arousing",
			"Hexagram 52, Still",
			"Hexagram 53, Development",
			"Hexagram 54, Marrying",
			"Hexagram 55, Abundance",
			"Hexagram 56, Wanderer",
			"Hexagram 57, Gentle",
			"Hexagram 58, Joyous",
			"Hexagram 59, Dispersion",
			"Hexagram 60, Limitation",
			"Hexagram 61, Truth",
			"Hexagram 62, Small",
			"Hexagram 63, After",
			"Hexagram 64, Before"
		};

		public string[] people =
		{
			"Barack Obama",
			"Xi Jinping",
			"Hillary Clinton",
			"Oprah Winfrey",
			"Angela Merkel",
			"Kim Jong-un",
			"Pope Francis",
			"Vladimir Putin",
			"Jeff Bezos",
			"Steve Jobs",
			"Aung San Suu Kyi",
			"Nancy Pelosi",
			"Donald Trump",
			"George W. Bush",
			"Bill Clinton",
			"George Clooney",
			"Jamie Dimon",
			"Recep Tayyip Erdoğan",
			"Bill Gates",
			"Hu Jintao",
			"LeBron James",
			"Christine Lagarde",
			"Narendra Modi",
			"Benjamin Netanyahu",
			"Michelle Obama",
			"Condoleezza Rice",
			"Elizabeth Warren",
			"Mark Zuckerberg",
			"Pope Benedict XVI",
			"Joe Biden",
			"Warren Buffett",
			"Catherine, Duchess of Cambridge",
			"Tim Cook",
			"The 14th Dalai Lama, Tenzin Gyatso",
			"John Kerry",
			"Charles Koch",
			"David Koch",
			"Ma Huateng",
			"Nelson Mandela",
			"Rupert Murdoch",
			"Elon Musk",
			"Larry Page",
			"Brad Pitt",
			"Ren Zhengfei",
			"John Roberts",
			"Muqtada al-Sadr",
			"Taylor Swift",
			"Tiger Woods",
			"Janet Yellen",
			"Malala Yousafzai",
			"Marilyn Monroe",
			"Abraham Lincoln",
			"Nelson Mandela",
			"John F. Kennedy",
			"Martin Luther King",
			"Queen Elizabeth II",
			"Winston Churchill",
			"Donald Trump",
			"Bill Gates",
			"Muhammad Ali",
			"Mahatma Gandhi",
			"Mother Teresa",
			"Christopher Columbus",
			"Charles Darwin",
			"Elvis Presley",
			"Albert Einstein",
			"Paul McCartney",
			"Queen Victoria",
			"Pope Francis",
			"Jawaharlal Nehru",
			"Leonardo da Vinci",
			"Vincent Van Gogh",
			"Franklin D. Roosevelt",
			"Pope John Paul II",
			"Thomas Edison",
			"Rosa Parks",
			"Lyndon Johnson",
			"Ludwig Beethoven",
			"Oprah Winfrey",
			"Indira Gandhi",
			"Eva Peron",
			"Benazir Bhutto",
			"George Orwell",
			"Desmond Tutu",
			"Dalai Lama",
			"Walt Disney",
			"Neil Armstrong",
			"Peter Sellers",
			"Barack Obama",
			"Malcolm X",
			"J.K.Rowling",
			"Richard Branson",
			"Pele",
			"Angelina Jolie",
			"Jesse Owens",
			"John Lennon",
			"Henry Ford",
			"Haile Selassie",
			"Joseph Stalin",
			"Lord Baden Powell",
			"Michael Jordon",
			"George Bush Jnr",
			"Vladimir Lenin",
			"Ingrid Bergman",
			"Fidel Castro",
			"Leo Tolstoy",
			"Greta Thunberg",
			"Pablo Picasso",
			"Oscar Wilde",
			"Coco Chanel",
			"Charles de Gaulle",
			"Amelia Earhart",
			"John M Keynes",
			"Louis Pasteur",
			"Mikhail Gorbachev",
			"Plato",
			"Adolf Hitler",
			"Sting",
			"Mary Magdalene",
			"Alfred Hitchcock",
			"Michael Jackson",
			"Madonna",
			"Mata Hari",
			"Cleopatra",
			"Grace Kelly",
			"Malala Yousafzai",
			"Steve Jobs",
			"Ronald Reagan",
			"Lionel Messi",
			"Babe Ruth",
			"Bob Geldof",
			"Roger Federer",
			"Sigmund Freud",
			"Woodrow Wilson",
			"Mao Zedong",
			"Katherine Hepburn",
			"Audrey Hepburn",
			"David Beckham",
			"Tiger Woods",
			"Usain Bolt",
			"Carl Lewis",
			"Prince Charles",
			"Jacqueline Kennedy Onassis",
			"C.S. Lewis",
			"Billie Holiday",
			"J.R.R. Tolkien",
			"Billie Jean King",
			"Margaret Thatcher",
			"Anne Frank",
			"Simon Bolivar",
			"Marie Antoinette",
			"Cristiano Ronaldo",
			"Emmeline Pankhurst ",
			"Emile Zatopek",
			"Lech Walesa",
			"Julie Andrews",
			"Florence Nightingale",
			"Marie Curie",
			"Stephen Hawking",
			"Tim Berners Lee",
			"Aung San Suu Kyi",
			"Lance Armstrong",
			"Shakira",
			"Jon Stewart",
			"Wright Brothers  Orville",
			"Ernest Hemingway",
			"Roman Abramovich",
			"Tom Cruise",
			"Rupert Murdoch",
			"Al Gore",
			"Sacha Baron Cohen",
			"George Clooney",
			"Paul Krugman",
			"Jimmy Wales",
			"Brad Pitt",
			"Kylie Minogue",
			"Stephen King"
		};

		public string RetInv()
		{
			System.Random random = new System.Random();
			return inventions[random.Next(0, inventions.Length - 1)];
		}

		public string RetNoun()
		{
			System.Random random = new System.Random();
			string aStr = nouns[random.Next(0, nouns.Length - 1)];
			return aStr;
		}

		public string RetPrep()
		{
			System.Random random = new System.Random();
			return prepositions[random.Next(0, prepositions.Length - 1)];
		}

		public string RetVerb()
		{
			System.Random random = new System.Random();
			return verbs[random.Next(verbs.Length - 1)];
		}

		public string RetHex()
		{
			System.Random random = new System.Random();
			return hexagrams[random.Next(0, hexagrams.Length - 1)];
		}

		public string RetHuman()
		{
			System.Random random = new System.Random();
			return people[random.Next(0, people.Length - 1)];
		}

		public HomeController(ILogger<HomeController> logger)
		{
			_logger = logger;
		}

		public IActionResult Index()
		{
			return View();
		}

		public IActionResult Privacy()
		{
			return View();
		}

		[HttpGet("search")]
		public IActionResult Search()
		{
			;
			return View("Search");
		}

		[HttpPost("addsearch")]
		public async Task<IActionResult> AddSearchAsync()
		{
			var d = new SortedList<System.Numerics.BigInteger, string>();
			var d2 = new List<string>();
			string numbSearches = Request.Form["numberOfSearches"];
			if (numbSearches == "")
			{
				var nextd = new SortedList<System.Numerics.BigInteger, string>();
				nextd.Add(-99999, "You didn't specify how many times to search");
				ViewBag.searchResults = nextd;
				return View("Search");
			}


			if (Request.Form["testSelect"] == "regBool")
			{
				string whichProcess = "reg";
				if (Request.Form["googBool"] == "wGoogle")
				{
					SortedList<System.Numerics.BigInteger, string> nextd = await DoSomethingAsync(numbSearches, d, whichProcess);
					ViewBag.searchResults = nextd;
					return View("Search");
				}
				else
				{
					List<string> nextd = NonAsyncList(numbSearches, d2, whichProcess);
					ViewBag.sansGoogle = nextd;
					return View("Search");
				}

			}
			else if (Request.Form["testSelect"] == "invBool")
			{
				string whichProcess = "inv";
				if (Request.Form["googBool"] == "wGoogle")
				{
					SortedList<System.Numerics.BigInteger, string> nextd = await DoSomethingAsync(numbSearches, d, whichProcess);
					ViewBag.searchResults = nextd;
					return View("Search");
				}
				else
				{
					List<string> nextd = NonAsyncList(numbSearches, d2, whichProcess);
					ViewBag.sansGoogle = nextd;
					return View("Search");
				}
			}
			else if (Request.Form["testSelect"] == "custBool")
			{
				string whichProcess = "cus";
				if (Request.Form["googBool"] == "wGoogle")
				{
					SortedList<System.Numerics.BigInteger, string> nextd = await DoSomethingAsync(numbSearches, d, whichProcess);
					ViewBag.searchResults = nextd;
					return View("Search");
				}
				else
				{
					List<string> nextd = NonAsyncList(numbSearches, d2, whichProcess);
					ViewBag.sansGoogle = nextd;
					return View("Search");
				}
			}
			else
			{
				var nextd = new SortedList<System.Numerics.BigInteger, string>();
				nextd.Add(-99999, "You didnt specify what search type");
				ViewBag.searchResults = nextd;
				return View("Search");
			}
		}

		public async Task<SortedList<System.Numerics.BigInteger, string>> DoSomethingAsync(string numberOfSearches, SortedList<System.Numerics.BigInteger, string> d, string whichProcess)
		{

			await new PuppeteerSharp.BrowserFetcher().DownloadAsync(PuppeteerSharp.BrowserFetcher.DefaultRevision);
			var browser = await PuppeteerSharp.Puppeteer.LaunchAsync(new PuppeteerSharp.LaunchOptions
			{
				Headless = false
			});

			using (var page = await browser.NewPageAsync())
			{
				System.Random random = new System.Random();

				for (int i = 0; i < Int32.Parse(numberOfSearches); i++)
				{
					if (whichProcess == "reg")
					{
						var randPrep = prepositions[random.Next(0, prepositions.Length - 1)];

						var randVerb1 = verbs[random.Next(verbs.Length - 1)];
						var randVerb2 = verbs[random.Next(0, verbs.Length - 1)];

						var randNoun0 = nouns[random.Next(0, nouns.Length - 1)];
						var randNoun2 = nouns[random.Next(0, nouns.Length - 1)];

						string objectAndPredicate = $"{randNoun0}+{randVerb1}+{randPrep}+{randNoun2}+{randVerb2}";
						var objectAndPredicate2 = $"{randNoun0} {randVerb1} {randPrep} {randNoun2} {randVerb2}";
						await page.GoToAsync($"https://www.google.com/search?q={objectAndPredicate}&oq={objectAndPredicate}");

						await page.WaitForSelectorAsync("#result-stats");
						var strValueEst = await page.EvaluateFunctionAsync("()=>document.getElementById('result-stats').innerText");
						string resultAsStr = strValueEst.ToString();

						string findMe = @"(\d|\,){2,}";
						var replaced = Regex.Match(resultAsStr, findMe);
						string repAsStr = replaced.ToString();
						repAsStr = (string)repAsStr.Replace(",", "");
						dynamic bigNumber;
						if (repAsStr != null)
						{
							bigNumber = BigInteger.Parse(repAsStr);
						}
						else
						{
							bigNumber = 0;
						}
						Console.WriteLine($"{i}: {repAsStr} - \'{objectAndPredicate2}\'");

						bool keyExists = d.ContainsKey(bigNumber);
						if (keyExists)
						{
							d.Add(bigNumber + 1, objectAndPredicate2);
						}
						else
						{
							d.Add(bigNumber, objectAndPredicate2);
						}
					}
					else if (whichProcess == "inv")
					{
						var randInv = inventions[random.Next(0, inventions.Length - 1)];
						var randVerb1 = verbs[random.Next(verbs.Length - 1)];

						string objectAndPredicate = $"\"{randInv}+that+{randVerb1}\"";
						var objectAndPredicate2 = $"\"{randInv} that {randVerb1}\"";
						await page.GoToAsync($"https://www.google.com/search?q={objectAndPredicate}&oq={objectAndPredicate}");


						await page.WaitForSelectorAsync("#result-stats");
						var strValueEst = await page.EvaluateFunctionAsync("()=>document.getElementById('result-stats').innerText");
						string resultAsStr = strValueEst.ToString();

						string findMe = @"(\d|\,){2,}";
						var replaced = Regex.Match(resultAsStr, findMe);
						string repAsStr = replaced.ToString();
						repAsStr = (string)repAsStr.Replace(",", "");
						dynamic bigNumber;
						Console.WriteLine($"{repAsStr} : was result stats");
						if (repAsStr != null)
						{
							bigNumber = BigInteger.Parse(repAsStr);
						}
						else
						{
							bigNumber = BigInteger.Parse("0");
						}

						Console.WriteLine($"{i}: {repAsStr} - \'{objectAndPredicate2}\'");


						{
							for (int j = 0; j < Int32.Parse(numberOfSearches); j++)
							{
								if (d.ContainsKey(bigNumber))
								{
									bigNumber += 1;
								}
								else
								{
									d.Add(bigNumber, objectAndPredicate2);
									break;
								}
							}
						}
					}
					else
					{
						string searchAndFormat = Request.Form["custQuery"];
						// if *Noun *Verb *Invention *Preposition -> retNoun() retVerb() retInv() retPrep
						//public string Replace (string oldValue, string? newValue, bool ignoreCase, System.Globalization.CultureInfo? culture);
						var rgx = new Regex(@"\*Noun");
						var rgx2 = new Regex(@"\*Verb");
						var rgx3 = new Regex(@"\*Prep");
						var rgx4 = new Regex(@"\*Inv");
						var rgx5 = new Regex(@"\*Hex");
						var rgx6 = new Regex(@"\*Guy");

						while (rgx.IsMatch(searchAndFormat))
						{
							searchAndFormat = rgx.Replace(searchAndFormat, RetNoun(), 1);
						}
						while (rgx2.IsMatch(searchAndFormat))
						{
							searchAndFormat = rgx2.Replace(searchAndFormat, RetVerb(), 1);
						}
						while (rgx3.IsMatch(searchAndFormat))
						{
							searchAndFormat = rgx3.Replace(searchAndFormat, RetPrep(), 1);
						}
						while (rgx4.IsMatch(searchAndFormat))
						{
							searchAndFormat = rgx4.Replace(searchAndFormat, RetInv(), 1);
						}
						while (rgx5.IsMatch(searchAndFormat))
						{
							searchAndFormat = rgx5.Replace(searchAndFormat, RetHex(), 1);
						}
						while (rgx6.IsMatch(searchAndFormat))
						{
							searchAndFormat = rgx6.Replace(searchAndFormat, RetHuman(), 1);
						}

						string objectAndPredicate = searchAndFormat.Trim().Replace(@"\s", "+").Replace('"', '\"');
						string objectAndPredicate2 = searchAndFormat.Trim().Replace('"', '\"');

						await page.GoToAsync($"https://www.google.com/search?q={objectAndPredicate}&oq={objectAndPredicate}");
						bool awaitedSuccess;
						try
						{
							awaitedSuccess = true;
							await page.WaitForSelectorAsync("#result-stats");
						}
						catch
						{
							awaitedSuccess = false;
							continue;
						}
						if (awaitedSuccess == true)
						{
							var strValueEst = await page.EvaluateFunctionAsync("()=>document.getElementById('result-stats').innerText");
							string resultAsStr = strValueEst.ToString();

							string findMe = @"(\d|\,){2,}";
							var replaced = Regex.Match(resultAsStr, findMe);
							string repAsStr = replaced.ToString();
							repAsStr = (string)repAsStr.Replace(",", "");
							dynamic bigNumber;
							if (repAsStr != null)
							{
								bigNumber = BigInteger.Parse(repAsStr);
							}
							else
							{
								bigNumber = BigInteger.Parse("0");
							}
							Console.WriteLine($"{i}: {repAsStr} - \'{objectAndPredicate2}\'");

							for (int j = 0; j < Int32.Parse(numberOfSearches); j++)
							{
								if (d.ContainsKey(bigNumber))
								{
									bigNumber += 1;
								}
								else
								{
									d.Add(bigNumber, objectAndPredicate2);
									break;
								}
							}
						}
						else
						{
							dynamic bigNumber = BigInteger.Parse("0");
							for (int j = 0; j < Int32.Parse(numberOfSearches); j++)
							{
								if (d.ContainsKey(bigNumber))
								{
									bigNumber += 1;
								}
								else
								{
									d.Add(bigNumber, objectAndPredicate2);
									break;
								}
							}
						}
					}
				}
				return d;
			}
		}
		//second function
		public List<string> NonAsyncList(string numberOfSearches, List<string> d2, string whichProcess)
		{
			System.Random random = new System.Random();

			for (int i = 0; i < Int32.Parse(numberOfSearches); i++)
			{
				if (whichProcess == "reg")
				{
					var randPrep = prepositions[random.Next(0, 69)];

					var randVerb1 = verbs[random.Next(434)];
					var randVerb2 = verbs[random.Next(0, 434)];

					var randNoun0 = nouns[random.Next(0, 1525)];
					var randNoun2 = nouns[random.Next(0, 1525)];

					var objectAndPredicate2 = $"{randNoun0} {randVerb1} {randPrep} {randNoun2} {randVerb2}";
					d2.Add(objectAndPredicate2);
				}
				else if (whichProcess == "inv")
				{
					var randInv = inventions[random.Next(0, inventions.Length - 1)];
					var randVerb1 = verbs[random.Next(verbs.Length - 1)];
					var objectAndPredicate2 = $"\"{randInv} that {randVerb1}\"";
					d2.Add(objectAndPredicate2);
				}
				else
				{
					string searchAndFormat = Request.Form["custQuery"];
					var rgx = new Regex(@"\*Noun");
					var rgx2 = new Regex(@"\*Verb");
					var rgx3 = new Regex(@"\*Prep");
					var rgx4 = new Regex(@"\*Inv");
					var rgx5 = new Regex(@"\*Hex");
					var rgx6 = new Regex(@"\*Guy");

					while (rgx.IsMatch(searchAndFormat))
					{
						searchAndFormat = rgx.Replace(searchAndFormat, RetNoun(), 1);
					}
					while (rgx2.IsMatch(searchAndFormat))
					{
						searchAndFormat = rgx2.Replace(searchAndFormat, RetVerb(), 1);
					}
					while (rgx3.IsMatch(searchAndFormat))
					{
						searchAndFormat = rgx3.Replace(searchAndFormat, RetPrep(), 1);
					}
					while (rgx4.IsMatch(searchAndFormat))
					{
						searchAndFormat = rgx4.Replace(searchAndFormat, RetInv(), 1);
					}
					while (rgx5.IsMatch(searchAndFormat))
					{
						searchAndFormat = rgx5.Replace(searchAndFormat, RetHex(), 1);
					}
					while (rgx6.IsMatch(searchAndFormat))
					{
						searchAndFormat = rgx6.Replace(searchAndFormat, RetHuman(), 1);
					}
					string objectAndPredicate = searchAndFormat.Trim().Replace(@"\s", "+").Replace('"', '\"');
					string objectAndPredicate2 = searchAndFormat.Trim().Replace('"', '\"');
					d2.Add(objectAndPredicate2);
				}
			}
			return d2;
		}


		[ResponseCache(Duration = 0, Location = ResponseCacheLocation.None, NoStore = true)]
		public IActionResult Error()
		{
			return View(new ErrorViewModel { RequestId = Activity.Current?.Id ?? HttpContext.TraceIdentifier });
		}
	}
}
